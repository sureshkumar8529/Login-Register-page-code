{"ast":null,"code":"var _jsxFileName = \"C:\\\\Cloud Xtreme\\\\VincenzoC26-login-system-springboot-react-d1527eb\\\\login-system\\\\login-system-frontend\\\\src\\\\component\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  onLoginSuccess\n}) => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const navigate = useNavigate(); // Hook to handle navigation\n\n  const handleLogin = async () => {\n    try {\n      // Make POST request to login endpoint\n      const response = await axios.post('http://localhost:8081/api/login', {\n        username,\n        password\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.status === 200) {\n        // Set success message and call onLoginSuccess if provided\n        setMessage(response.data.message || 'Login successful!');\n        onLoginSuccess && onLoginSuccess(); // Call the function if it's passed as a prop\n\n        // Redirect to home page\n        navigate('/home');\n      } else {\n        setMessage('Error logging in.'); // Handle cases where status is not 200\n      }\n    } catch (error) {\n      if (error.response) {\n        console.error('Error response from server:', error.response.data);\n        setMessage('Error logging in: ' + (error.response.data.message || 'Invalid credentials'));\n      } else {\n        console.error('Error during request:', error.message);\n        setMessage('Error logging in.');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Username\",\n      value: username,\n      onChange: e => setUsername(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"eqKp26thtn4/43TzJV2g5Njd23Y=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","Login","onLoginSuccess","_s","username","setUsername","password","setPassword","message","setMessage","navigate","handleLogin","response","post","headers","status","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Cloud Xtreme/VincenzoC26-login-system-springboot-react-d1527eb/login-system/login-system-frontend/src/component/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Login = ({ onLoginSuccess }) => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const navigate = useNavigate(); // Hook to handle navigation\r\n\r\n    const handleLogin = async () => {\r\n        try {\r\n            // Make POST request to login endpoint\r\n            const response = await axios.post(\r\n                'http://localhost:8081/api/login',\r\n                { username, password },\r\n                { headers: { 'Content-Type': 'application/json' } }\r\n            );\r\n\r\n            if (response.status === 200) {\r\n                // Set success message and call onLoginSuccess if provided\r\n                setMessage(response.data.message || 'Login successful!');\r\n                onLoginSuccess && onLoginSuccess(); // Call the function if it's passed as a prop\r\n\r\n                // Redirect to home page\r\n                navigate('/home');\r\n            } else {\r\n                setMessage('Error logging in.'); // Handle cases where status is not 200\r\n            }\r\n        } catch (error) {\r\n            if (error.response) {\r\n                console.error('Error response from server:', error.response.data);\r\n                setMessage('Error logging in: ' + (error.response.data.message || 'Invalid credentials'));\r\n            } else {\r\n                console.error('Error during request:', error.message);\r\n                setMessage('Error logging in.');\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Login</h2>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Username\"\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n            />\r\n            <input\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            <button onClick={handleLogin}>Login</button>\r\n            {message && <p>{message}</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}